// <auto-generated />
using System;
using Base.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Base.DAL.Migrations
{
    [DbContext(typeof(SystemContext))]
    [Migration("20240221095853_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Base.DAL.Data.InvoiceHDR", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceID"), 1L, 1);

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PaymentMethod")
                        .HasColumnType("bit");

                    b.HasKey("InvoiceID");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            InvoiceID = 1,
                            Customer = "Ali",
                            Description = "description field",
                            InvoiceDate = new DateTime(2024, 2, 21, 11, 58, 52, 832, DateTimeKind.Local).AddTicks(1213),
                            PaymentMethod = true
                        },
                        new
                        {
                            InvoiceID = 5,
                            Customer = "Ahmed",
                            Description = "description field##",
                            InvoiceDate = new DateTime(2024, 2, 21, 11, 58, 52, 832, DateTimeKind.Local).AddTicks(1249),
                            PaymentMethod = false
                        },
                        new
                        {
                            InvoiceID = 2,
                            Customer = "Nour",
                            Description = "description field",
                            InvoiceDate = new DateTime(2024, 2, 21, 11, 58, 52, 832, DateTimeKind.Local).AddTicks(1252),
                            PaymentMethod = true
                        });
                });

            modelBuilder.Entity("Base.DAL.ItemDTL", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"), 1L, 1);

                    b.Property<int>("InvoiceHDRId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("InvoiceHDRId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            InvoiceHDRId = 1,
                            ItemName = "bread",
                            Price = 10m,
                            Qty = 20
                        },
                        new
                        {
                            ItemId = 9,
                            InvoiceHDRId = 2,
                            ItemName = "cup",
                            Price = 10m,
                            Qty = 20
                        },
                        new
                        {
                            ItemId = 2,
                            InvoiceHDRId = 5,
                            ItemName = "tea",
                            Price = 20m,
                            Qty = 20
                        },
                        new
                        {
                            ItemId = 3,
                            InvoiceHDRId = 1,
                            ItemName = "milk",
                            Price = 10m,
                            Qty = 10
                        });
                });

            modelBuilder.Entity("Base.DAL.ItemDTL", b =>
                {
                    b.HasOne("Base.DAL.Data.InvoiceHDR", null)
                        .WithMany("Items")
                        .HasForeignKey("InvoiceHDRId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Base.DAL.Data.InvoiceHDR", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
